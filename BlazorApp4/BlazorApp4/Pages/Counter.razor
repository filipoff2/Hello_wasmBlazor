@page "/counter"

@using System.IO;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Components.Web;
@inject Microsoft.JSInterop.IJSRuntime JS
@using PdfSharp.Pdf;
@using PdfSharp.Drawing;

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<p>Current fileName: @fileName</p>
<div>

</div>


<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
	private int currentCount = 0;
	private string fileName = "";
	private void IncrementCount()
	{

		try
		{
			currentCount++;

			var document = new PdfDocument();
			var page = document.AddPage();
			
			//var gfx = XGraphics.FromPdfPage(page);
			//var font = new XFont("times", 20, XFontStyle.Bold);

			//gfx.DrawString("Hello World!", font, XBrushes.Black, new XRect(20, 20, page.Width, page.Height), XStringFormats.Center);
			MemoryStream memoryStream = new MemoryStream();
			document.Save(memoryStream, true);

			/*	var converter = new BasicConverter(new PdfTools());
				doc = new HtmlToPdfDocument()
				{
					GlobalSettings = {
					ColorMode = ColorMode.Color,
					Orientation = Orientation.Portrait,
					PaperSize = PaperKind.A4,
					Margins = new MarginSettings() { Top = 10 },
					Out = @"C:\DinkToPdf\src\DinkToPdf.TestThreadSafe\test.pdf",
				},
				Objects = {
				new ObjectSettings()
				{
				Page = "http://google.com/",
				},
				}
				};


				fileName = doc.GlobalSettings.Out;
				JS.SaveAs("Sample.pdf", converter.Convert(doc));*/
				JS.SaveAs("Sample.pdf", memoryStream.ToArray());
		}
		catch (Exception e)
		{

			fileName = e.Message;
		}
	}



}
